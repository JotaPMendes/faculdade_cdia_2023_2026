import streamlit as st
from app.config.config import CSS_STYLES, LIMIAR_DESVIOS
from app.database.connection import inicializar_banco_dados
from app.components.transaction_form import renderizar_formulario_transacao
from app.components.data_viewer import renderizar_visualizacao_dados, renderizar_grafico_anomalias
from app.components.settings import renderizar_configuracoes
from app.services.email_service import enviar_email_alerta

# Configura√ß√£o da p√°gina Streamlit
st.set_page_config(
    page_title="Sistema de Detec√ß√£o de Transa√ß√µes An√¥malas",
    page_icon="üîç",
    layout="wide",
    initial_sidebar_state="collapsed"
)

# Aplicar estilos CSS definidos no m√≥dulo de configura√ß√£o
st.markdown(CSS_STYLES, unsafe_allow_html=True)

# T√≠tulo principal
st.markdown('<h1 class="main-header">üîç Sistema de Detec√ß√£o de Transa√ß√µes An√¥malas</h1>', unsafe_allow_html=True)
st.markdown('<p class="sub-header">Monitoramento inteligente de padr√µes de gastos dos usu√°rios</p>', unsafe_allow_html=True)

# Inicializa√ß√£o do estado da sess√£o para armazenar alertas
if 'alertas' not in st.session_state:
    st.session_state.alertas = []
    
# Inicializar configura√ß√µes se n√£o existirem
if 'email_user' not in st.session_state:
    st.session_state.email_user = ""
    st.session_state.email_pass = ""
    st.session_state.email_dest = ""
    st.session_state.smtp_server = "smtp.gmail.com"
    st.session_state.smtp_port = 587
    st.session_state.email_alerta_ativo = False
    st.session_state.modo_demo = False

# Configura√ß√µes no topo
st.markdown('<div class="config-header">', unsafe_allow_html=True)
renderizar_configuracoes()
st.markdown('</div>', unsafe_allow_html=True)

# Inicializar o sistema de banco de dados
inicializado = inicializar_banco_dados()

# Exibir alertas no topo da p√°gina se houver algum
if st.session_state.alertas:
    with st.expander("üö® ALERTAS DE TRANSA√á√ïES AN√îMALAS", expanded=True):
        st.markdown("""
        <div style="background-color: #FFEBEE; padding: 10px; border-radius: 5px; margin-bottom: 15px; 
                    border-left: 5px solid #F44336;">
            <h4 style="color: #C62828; margin-top: 0;">Transa√ß√µes Suspeitas Detectadas</h4>
            <p>As seguintes transa√ß√µes foram identificadas como potencialmente an√¥malas com base nos padr√µes de gasto hist√≥ricos.</p>
        </div>
        """, unsafe_allow_html=True)
        
        for i, alerta in enumerate(reversed(st.session_state.alertas)):
            st.markdown(f"""
            <div style="background-color: white; padding: 15px; border-radius: 5px; 
                        margin-bottom: 15px; box-shadow: 0 1px 3px rgba(0,0,0,0.12);">
                <div style="display: flex; justify-content: space-between;">
                    <span style="font-weight: bold; color: #F44336;">‚è∞ {alerta['horario']}</span>
                    <span style="font-weight: bold;">üë§ {alerta['usuario']}</span>
                </div>
                <div style="margin-top: 10px; padding: 10px; background-color: #FFEBEE; 
                            border-radius: 5px; font-size: 0.9em;">
                    {alerta['mensagem']}
                </div>
            </div>
            """, unsafe_allow_html=True)
        
        if st.button("Limpar Todos os Alertas", key="clear_alerts"):
            st.session_state.alertas = []
            st.experimental_rerun()

# Criar abas para organizar a interface
tab1, tab2, tab3 = st.tabs(["Inserir Transa√ß√£o", "Visualizar Transa√ß√µes", "Estat√≠sticas por Usu√°rio"])

# Aba 1 - Inserir nova transa√ß√£o
with tab1:
    renderizar_formulario_transacao()

# Aba 2 - Visualiza√ß√£o de transa√ß√µes
with tab2:
    renderizar_visualizacao_dados()

# Aba 3 - Estat√≠sticas por usu√°rio
with tab3:
    renderizar_grafico_anomalias()