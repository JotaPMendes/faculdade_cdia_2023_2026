version: '3'

services:
  postgres:
    image: postgres:14
    container_name: poc-postgres
    environment:
      POSTGRES_DB: transactions_db
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/database/sql/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - poc-network

  # Serviço Zookeeper (necessário para o Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - poc-network

  # Serviço Kafka
  kafka:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - poc-network

  # Interface web para gerenciar o Kafka
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - poc-network

  # Serviço Streamlit para a interface de usuário - ATUALIZADO PARA ESTRUTURA MODULAR
  streamlit:
    build:
      context: .
      dockerfile_inline: |
        FROM python:3.9-slim
        
        WORKDIR /app
        
        # Instala dependências do sistema necessárias para numpy e pandas
        RUN apt-get update && apt-get install -y \
            build-essential \
            && rm -rf /var/lib/apt/lists/*
        
        # Copiar arquivos de requisitos primeiro para aproveitar o cache do Docker
        COPY requirements.txt .
        
        # Instala as dependências na ordem correta
        RUN pip install --no-cache-dir numpy==1.22.4
        RUN pip install --no-cache-dir -r requirements.txt
        
        # Copiar a estrutura completa do aplicativo
        COPY app_streamlit.py .
        COPY transactions.csv .
        COPY app/ ./app/
        
        # Expor a porta do Streamlit
        EXPOSE 8501
        
        # Comando para executar a aplicação
        CMD ["streamlit", "run", "app_streamlit.py", "--server.port=8501", "--server.address=0.0.0.0"]
    container_name: poc-streamlit
    ports:
      - "8501:8501"
    volumes:
      - ./transactions.csv:/app/transactions.csv
      - ./app:/app/app
      - ./transacoes.db:/app/transacoes.db
    depends_on:
      - kafka
    networks:
      - poc-network

volumes:
  postgres_data:

networks:
  poc-network:
    driver: bridge
